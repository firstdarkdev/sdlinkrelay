name: Build and Publish Docker Image and JAR

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # --- Gradle Build ---
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission to Gradle Wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Find built JAR
        id: find_jar
        run: echo "JAR_PATH=$(find build/libs -name '*.jar' | head -n 1)" >> $GITHUB_ENV

      # --- Docker Build & Push ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/docktainer:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/docktainer:${{ github.sha }}

      - name: Tag Docker image with version
        if: startsWith(github.ref, 'refs/tags')
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/docktainer:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/docktainer:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository_owner }}/docktainer:${{ github.ref_name }}

      - name: Tag Docker image as latest
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/docktainer:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/docktainer:latest
          docker push ghcr.io/${{ github.repository_owner }}/docktainer:latest

  release:
    if: startsWith(github.ref, 'refs/tags')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find built JAR
        id: find_jar
        run: echo "JAR_PATH=$(find build/libs -name '*.jar' | head -n 1)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.JAR_PATH }}
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Automated release for ${{ github.ref_name }}"
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
